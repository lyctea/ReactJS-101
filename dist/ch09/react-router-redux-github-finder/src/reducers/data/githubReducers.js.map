{"version":3,"sources":["../../../../../../ch09/react-router-redux-github-finder/src/reducers/data/githubReducers.js"],"names":["githubReducers","GET_GITHUB_SUCCESS","state","payload","merge","data","CHAGE_USER_ID","userId"],"mappings":";;;;;;AAAA;;AACA;;AAEA;;AAOA,IAAMA,iBAAiB,iCAAc;AACjC;AACFC,sBAAoB,4BAACC,KAAD;AAAA,QAAUC,OAAV,QAAUA,OAAV;AAAA,WAClBD,MAAME,KAAN,CAAY;AACVC,YAAMF,QAAQE;AADJ,KAAZ,CADkB;AAAA,GAFe;AAOjC;AACFC,iBAAe,uBAACJ,KAAD;AAAA,QAAUC,OAAV,SAAUA,OAAV;AAAA,WACbD,MAAME,KAAN,CAAY;AACV,gBACAD,QAAQI;AAFE,KAAZ,CADa;AAAA;AARoB,CAAd,sBAAvB;;kBAgBeP,c","file":"githubReducers.js","sourcesContent":["import { handleActions } from 'redux-actions';\nimport { GithubState } from '../../constants/models';\n\nimport {\n  GET_GITHUB_INITIATE,\n  GET_GITHUB_SUCCESS,\n  GET_GITHUB_FAIL,\n  CHAGE_USER_ID,\n} from '../../constants/actionTypes';\n\nconst githubReducers = handleActions({\n    // 当使用者按送出按钮，发出 GET_GITHUB_SUCCESS action 时将接收到的资料 merge\n  GET_GITHUB_SUCCESS: (state, { payload }) => (\n    state.merge({\n      data: payload.data,\n    })\n  ),\n    // 当使用者输入使用者 ID 会发出 CHAGE_USER_ID action 时将接收到的资料 merge \n  CHAGE_USER_ID: (state, { payload }) => (\n    state.merge({\n      'userId':\n      payload.userId\n    })\n  ),\n}, GithubState);\n\nexport default githubReducers;\n"]}